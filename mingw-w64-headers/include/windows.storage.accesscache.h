/*** Autogenerated by WIDL 6.0-rc1 from include/windows.storage.accesscache.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __windows_storage_accesscache_h__
#define __windows_storage_accesscache_h__

/* Forward declarations */

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                interface IStorageApplicationPermissionsStatics;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                interface IStorageItemAccessList;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CStorageApplicationPermissions_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CStorageApplicationPermissions_FWD_DEFINED__
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                class StorageApplicationPermissions;
            }
        }
    }
}
#else
typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CStorageApplicationPermissions __x_ABI_CWindows_CStorage_CAccessCache_CStorageApplicationPermissions;
#endif /* defined __cplusplus */
#endif /* defined ____x_ABI_CWindows_CStorage_CAccessCache_CStorageApplicationPermissions_FWD_DEFINED__ */

/* Headers for imported files */

#include <inspectable.h>
#include <windows.foundation.h>
#include <windows.storage.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                interface IStorageItemAccessList;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                interface IStorageApplicationPermissionsStatics;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                interface IStorageItemMostRecentlyUsedList;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

#ifdef __cplusplus
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                enum AccessCacheOptions {
                    AccessCacheOptions_None = 0x0,
                    AccessCacheOptions_DisallowUserInput = 0x1,
                    AccessCacheOptions_FastLocationsOnly = 0x2,
                    AccessCacheOptions_UseReadOnlyCachedCopy = 0x4,
                    AccessCacheOptions_SuppressAccessTimeUpdate = 0x8
                };
            }
        }
    }
}
extern "C" {
#else /* __cplusplus */
enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions {
    AccessCacheOptions_None = 0x0,
    AccessCacheOptions_DisallowUserInput = 0x1,
    AccessCacheOptions_FastLocationsOnly = 0x2,
    AccessCacheOptions_UseReadOnlyCachedCopy = 0x4,
    AccessCacheOptions_SuppressAccessTimeUpdate = 0x8
};
#ifdef WIDL_USING_WINDOWS_STORAGE_ACCESSCACHE_ACCESSCACHEOPTIONS
#define AccessCacheOptions __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions
#endif /* WIDL_USING__WINDOWS_STORAGE_ACCESSCACHE_ACCESSCACHEOPTIONS */
#endif /* __cplusplus */

/*****************************************************************************
 * IStorageApplicationPermissionsStatics interface
 *
 */
#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_INTERFACE_DEFINED__

DEFINE_GUID(IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics, 0x4391dfaa, 0xd033, 0x48f9, 0x80,0x60, 0x3e,0xc8,0x47,0xd2,0xe3,0xf1);
#if defined(__cplusplus) && !defined(CINTERFACE)
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                MIDL_INTERFACE("4391dfaa-d033-48f9-8060-3ec847d2e3f1")
                IStorageApplicationPermissionsStatics : public IInspectable
                {
                    virtual HRESULT STDMETHODCALLTYPE get_FutureAccessList(
                        ABI::Windows::Storage::AccessCache::IStorageItemAccessList **value) = 0;

                    virtual HRESULT STDMETHODCALLTYPE get_MostRecentlyUsedList(
                        ABI::Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList **value) = 0;

                };
            }
        }
    }
}
extern "C" {
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ABI::Windows::Storage::AccessCache::IStorageApplicationPermissionsStatics, 0x4391dfaa, 0xd033, 0x48f9, 0x80,0x60, 0x3e,0xc8,0x47,0xd2,0xe3,0xf1)
#endif
#else
typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics *This);

    /*** IInspectable methods ***/
    HRESULT (STDMETHODCALLTYPE *GetIids)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics *This,
        ULONG *iidCount,
        IID **iids);

    HRESULT (STDMETHODCALLTYPE *GetRuntimeClassName)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics *This,
        HSTRING *className);

    HRESULT (STDMETHODCALLTYPE *GetTrustLevel)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics *This,
        TrustLevel *trustLevel);

    /*** IStorageApplicationPermissionsStatics methods ***/
    HRESULT (STDMETHODCALLTYPE *get_FutureAccessList)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics *This,
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList **value);

    HRESULT (STDMETHODCALLTYPE *get_MostRecentlyUsedList)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics *This,
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList **value);

    END_INTERFACE
} __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl;

interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics {
    CONST_VTBL __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_AddRef(This) (This)->lpVtbl->AddRef(This)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_Release(This) (This)->lpVtbl->Release(This)
/*** IInspectable methods ***/
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetIids(This,iidCount,iids) (This)->lpVtbl->GetIids(This,iidCount,iids)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetRuntimeClassName(This,className) (This)->lpVtbl->GetRuntimeClassName(This,className)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetTrustLevel(This,trustLevel) (This)->lpVtbl->GetTrustLevel(This,trustLevel)
/*** IStorageApplicationPermissionsStatics methods ***/
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_get_FutureAccessList(This,value) (This)->lpVtbl->get_FutureAccessList(This,value)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_get_MostRecentlyUsedList(This,value) (This)->lpVtbl->get_MostRecentlyUsedList(This,value)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_QueryInterface(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_AddRef(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_Release(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This) {
    return This->lpVtbl->Release(This);
}
/*** IInspectable methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetIids(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,ULONG *iidCount,IID **iids) {
    return This->lpVtbl->GetIids(This,iidCount,iids);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetRuntimeClassName(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,HSTRING *className) {
    return This->lpVtbl->GetRuntimeClassName(This,className);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetTrustLevel(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,TrustLevel *trustLevel) {
    return This->lpVtbl->GetTrustLevel(This,trustLevel);
}
/*** IStorageApplicationPermissionsStatics methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_get_FutureAccessList(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList **value) {
    return This->lpVtbl->get_FutureAccessList(This,value);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_get_MostRecentlyUsedList(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This,__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList **value) {
    return This->lpVtbl->get_MostRecentlyUsedList(This,value);
}
#endif
#ifdef WIDL_USING_WINDOWS_STORAGE_ACCESSCACHE_ISTORAGEAPPLICATIONPERMISSIONSSTATICS
#define IID_IStorageApplicationPermissionsStatics IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics
#define IStorageApplicationPermissionsStaticsVtbl __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl
#define IStorageApplicationPermissionsStatics __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics
#define IStorageApplicationPermissionsStatics_QueryInterface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_QueryInterface
#define IStorageApplicationPermissionsStatics_AddRef __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_AddRef
#define IStorageApplicationPermissionsStatics_Release __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_Release
#define IStorageApplicationPermissionsStatics_GetIids __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetIids
#define IStorageApplicationPermissionsStatics_GetRuntimeClassName __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetRuntimeClassName
#define IStorageApplicationPermissionsStatics_GetTrustLevel __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_GetTrustLevel
#define IStorageApplicationPermissionsStatics_get_FutureAccessList __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_get_FutureAccessList
#define IStorageApplicationPermissionsStatics_get_MostRecentlyUsedList __x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_get_MostRecentlyUsedList
#endif /* WIDL_USING__WINDOWS_STORAGE_ACCESSCACHE_ISTORAGEAPPLICATIONPERMISSIONSSTATICS */
#endif

#endif

#endif  /* ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IStorageItemAccessList interface
 *
 */
#ifndef ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_INTERFACE_DEFINED__

DEFINE_GUID(IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList, 0x2caff6ad, 0xde90, 0x47f5, 0xb2,0xc3, 0xdd,0x36,0xc9,0xfd,0xd4,0x53);
#if defined(__cplusplus) && !defined(CINTERFACE)
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace AccessCache {
                MIDL_INTERFACE("2caff6ad-de90-47f5-b2c3-dd36c9fdd453")
                IStorageItemAccessList : public IInspectable
                {
                    virtual HRESULT STDMETHODCALLTYPE AddOverloadDefaultMetadata(
                        ABI::Windows::Storage::IStorageItem *file,
                        HSTRING *token) = 0;

                    virtual HRESULT STDMETHODCALLTYPE Add(
                        ABI::Windows::Storage::IStorageItem *file,
                        HSTRING metadata,
                        HSTRING *token) = 0;

                    virtual HRESULT STDMETHODCALLTYPE AddOrReplaceOverloadDefaultMetadata(
                        HSTRING token,
                        ABI::Windows::Storage::IStorageItem *file) = 0;

                    virtual HRESULT STDMETHODCALLTYPE AddOrReplace(
                        HSTRING token,
                        ABI::Windows::Storage::IStorageItem *file,
                        HSTRING metadata) = 0;

                    virtual HRESULT STDMETHODCALLTYPE GetItemAsync(
                        HSTRING token,
                        ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::Storage::IStorageItem*> **operation) = 0;

                    virtual HRESULT STDMETHODCALLTYPE GetFileAsync(
                        HSTRING token,
                        ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::Storage::StorageFile*> **operation) = 0;

                    virtual HRESULT STDMETHODCALLTYPE GetFolderAsync(
                        HSTRING token,
                        ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::Storage::StorageFolder*> **operation) = 0;

                    virtual HRESULT STDMETHODCALLTYPE GetItemWithOptionsAsync(
                        HSTRING token,
                        enum AccessCacheOptions options,
                        ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::Storage::IStorageItem*> **operation) = 0;

                    virtual HRESULT STDMETHODCALLTYPE GetFileWithOptionsAsync(
                        HSTRING token,
                        enum AccessCacheOptions options,
                        ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::Storage::StorageFile*> **operation) = 0;

                    virtual HRESULT STDMETHODCALLTYPE GetFolderWithOptionsAsync(
                        HSTRING token,
                        enum AccessCacheOptions options,
                        ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::Storage::StorageFolder*> **operation) = 0;

                    virtual HRESULT STDMETHODCALLTYPE Remove(
                        HSTRING token) = 0;

                    virtual HRESULT STDMETHODCALLTYPE ContainsItem(
                        HSTRING token,
                        boolean *value) = 0;

                    virtual HRESULT STDMETHODCALLTYPE Clear(
                        ) = 0;

                    virtual HRESULT STDMETHODCALLTYPE CheckAccess(
                        ABI::Windows::Storage::IStorageItem *file,
                        boolean *value) = 0;

                    virtual HRESULT STDMETHODCALLTYPE get_Entries(
                        IInspectable **entries) = 0;

                    virtual HRESULT STDMETHODCALLTYPE get_MaximumItemsAllowed(
                        UINT32 *value) = 0;

                };
            }
        }
    }
}
extern "C" {
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ABI::Windows::Storage::AccessCache::IStorageItemAccessList, 0x2caff6ad, 0xde90, 0x47f5, 0xb2,0xc3, 0xdd,0x36,0xc9,0xfd,0xd4,0x53)
#endif
#else
typedef struct __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This);

    /*** IInspectable methods ***/
    HRESULT (STDMETHODCALLTYPE *GetIids)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        ULONG *iidCount,
        IID **iids);

    HRESULT (STDMETHODCALLTYPE *GetRuntimeClassName)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING *className);

    HRESULT (STDMETHODCALLTYPE *GetTrustLevel)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        TrustLevel *trustLevel);

    /*** IStorageItemAccessList methods ***/
    HRESULT (STDMETHODCALLTYPE *AddOverloadDefaultMetadata)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        __x_ABI_CWindows_CStorage_CIStorageItem *file,
        HSTRING *token);

    HRESULT (STDMETHODCALLTYPE *Add)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        __x_ABI_CWindows_CStorage_CIStorageItem *file,
        HSTRING metadata,
        HSTRING *token);

    HRESULT (STDMETHODCALLTYPE *AddOrReplaceOverloadDefaultMetadata)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        __x_ABI_CWindows_CStorage_CIStorageItem *file);

    HRESULT (STDMETHODCALLTYPE *AddOrReplace)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        __x_ABI_CWindows_CStorage_CIStorageItem *file,
        HSTRING metadata);

    HRESULT (STDMETHODCALLTYPE *GetItemAsync)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        __FIAsyncOperation_1_Windows__CStorage__CIStorageItem **operation);

    HRESULT (STDMETHODCALLTYPE *GetFileAsync)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        __FIAsyncOperation_1_Windows__CStorage__CStorageFile **operation);

    HRESULT (STDMETHODCALLTYPE *GetFolderAsync)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        __FIAsyncOperation_1_Windows__CStorage__CStorageFolder **operation);

    HRESULT (STDMETHODCALLTYPE *GetItemWithOptionsAsync)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,
        __FIAsyncOperation_1_Windows__CStorage__CIStorageItem **operation);

    HRESULT (STDMETHODCALLTYPE *GetFileWithOptionsAsync)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,
        __FIAsyncOperation_1_Windows__CStorage__CStorageFile **operation);

    HRESULT (STDMETHODCALLTYPE *GetFolderWithOptionsAsync)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,
        __FIAsyncOperation_1_Windows__CStorage__CStorageFolder **operation);

    HRESULT (STDMETHODCALLTYPE *Remove)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token);

    HRESULT (STDMETHODCALLTYPE *ContainsItem)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        HSTRING token,
        boolean *value);

    HRESULT (STDMETHODCALLTYPE *Clear)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This);

    HRESULT (STDMETHODCALLTYPE *CheckAccess)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        __x_ABI_CWindows_CStorage_CIStorageItem *file,
        boolean *value);

    HRESULT (STDMETHODCALLTYPE *get_Entries)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        IInspectable **entries);

    HRESULT (STDMETHODCALLTYPE *get_MaximumItemsAllowed)(
        __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList *This,
        UINT32 *value);

    END_INTERFACE
} __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl;

interface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList {
    CONST_VTBL __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddRef(This) (This)->lpVtbl->AddRef(This)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Release(This) (This)->lpVtbl->Release(This)
/*** IInspectable methods ***/
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetIids(This,iidCount,iids) (This)->lpVtbl->GetIids(This,iidCount,iids)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetRuntimeClassName(This,className) (This)->lpVtbl->GetRuntimeClassName(This,className)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetTrustLevel(This,trustLevel) (This)->lpVtbl->GetTrustLevel(This,trustLevel)
/*** IStorageItemAccessList methods ***/
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOverloadDefaultMetadata(This,file,token) (This)->lpVtbl->AddOverloadDefaultMetadata(This,file,token)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Add(This,file,metadata,token) (This)->lpVtbl->Add(This,file,metadata,token)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOrReplaceOverloadDefaultMetadata(This,token,file) (This)->lpVtbl->AddOrReplaceOverloadDefaultMetadata(This,token,file)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOrReplace(This,token,file,metadata) (This)->lpVtbl->AddOrReplace(This,token,file,metadata)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetItemAsync(This,token,operation) (This)->lpVtbl->GetItemAsync(This,token,operation)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFileAsync(This,token,operation) (This)->lpVtbl->GetFileAsync(This,token,operation)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFolderAsync(This,token,operation) (This)->lpVtbl->GetFolderAsync(This,token,operation)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetItemWithOptionsAsync(This,token,options,operation) (This)->lpVtbl->GetItemWithOptionsAsync(This,token,options,operation)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFileWithOptionsAsync(This,token,options,operation) (This)->lpVtbl->GetFileWithOptionsAsync(This,token,options,operation)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFolderWithOptionsAsync(This,token,options,operation) (This)->lpVtbl->GetFolderWithOptionsAsync(This,token,options,operation)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Remove(This,token) (This)->lpVtbl->Remove(This,token)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_ContainsItem(This,token,value) (This)->lpVtbl->ContainsItem(This,token,value)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Clear(This) (This)->lpVtbl->Clear(This)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_CheckAccess(This,file,value) (This)->lpVtbl->CheckAccess(This,file,value)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_get_Entries(This,entries) (This)->lpVtbl->get_Entries(This,entries)
#define __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_get_MaximumItemsAllowed(This,value) (This)->lpVtbl->get_MaximumItemsAllowed(This,value)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_QueryInterface(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddRef(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Release(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This) {
    return This->lpVtbl->Release(This);
}
/*** IInspectable methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetIids(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,ULONG *iidCount,IID **iids) {
    return This->lpVtbl->GetIids(This,iidCount,iids);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetRuntimeClassName(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING *className) {
    return This->lpVtbl->GetRuntimeClassName(This,className);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetTrustLevel(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,TrustLevel *trustLevel) {
    return This->lpVtbl->GetTrustLevel(This,trustLevel);
}
/*** IStorageItemAccessList methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOverloadDefaultMetadata(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,__x_ABI_CWindows_CStorage_CIStorageItem *file,HSTRING *token) {
    return This->lpVtbl->AddOverloadDefaultMetadata(This,file,token);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Add(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,__x_ABI_CWindows_CStorage_CIStorageItem *file,HSTRING metadata,HSTRING *token) {
    return This->lpVtbl->Add(This,file,metadata,token);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOrReplaceOverloadDefaultMetadata(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,__x_ABI_CWindows_CStorage_CIStorageItem *file) {
    return This->lpVtbl->AddOrReplaceOverloadDefaultMetadata(This,token,file);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOrReplace(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,__x_ABI_CWindows_CStorage_CIStorageItem *file,HSTRING metadata) {
    return This->lpVtbl->AddOrReplace(This,token,file,metadata);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetItemAsync(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,__FIAsyncOperation_1_Windows__CStorage__CIStorageItem **operation) {
    return This->lpVtbl->GetItemAsync(This,token,operation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFileAsync(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,__FIAsyncOperation_1_Windows__CStorage__CStorageFile **operation) {
    return This->lpVtbl->GetFileAsync(This,token,operation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFolderAsync(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,__FIAsyncOperation_1_Windows__CStorage__CStorageFolder **operation) {
    return This->lpVtbl->GetFolderAsync(This,token,operation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetItemWithOptionsAsync(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,__FIAsyncOperation_1_Windows__CStorage__CIStorageItem **operation) {
    return This->lpVtbl->GetItemWithOptionsAsync(This,token,options,operation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFileWithOptionsAsync(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,__FIAsyncOperation_1_Windows__CStorage__CStorageFile **operation) {
    return This->lpVtbl->GetFileWithOptionsAsync(This,token,options,operation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFolderWithOptionsAsync(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,enum __x_ABI_CWindows_CStorage_CAccessCache_CAccessCacheOptions options,__FIAsyncOperation_1_Windows__CStorage__CStorageFolder **operation) {
    return This->lpVtbl->GetFolderWithOptionsAsync(This,token,options,operation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Remove(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token) {
    return This->lpVtbl->Remove(This,token);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_ContainsItem(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,HSTRING token,boolean *value) {
    return This->lpVtbl->ContainsItem(This,token,value);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Clear(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This) {
    return This->lpVtbl->Clear(This);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_CheckAccess(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,__x_ABI_CWindows_CStorage_CIStorageItem *file,boolean *value) {
    return This->lpVtbl->CheckAccess(This,file,value);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_get_Entries(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,IInspectable **entries) {
    return This->lpVtbl->get_Entries(This,entries);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_get_MaximumItemsAllowed(__x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This,UINT32 *value) {
    return This->lpVtbl->get_MaximumItemsAllowed(This,value);
}
#endif
#ifdef WIDL_USING_WINDOWS_STORAGE_ACCESSCACHE_ISTORAGEITEMACCESSLIST
#define IID_IStorageItemAccessList IID___x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList
#define IStorageItemAccessListVtbl __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl
#define IStorageItemAccessList __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList
#define IStorageItemAccessList_QueryInterface __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_QueryInterface
#define IStorageItemAccessList_AddRef __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddRef
#define IStorageItemAccessList_Release __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Release
#define IStorageItemAccessList_GetIids __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetIids
#define IStorageItemAccessList_GetRuntimeClassName __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetRuntimeClassName
#define IStorageItemAccessList_GetTrustLevel __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetTrustLevel
#define IStorageItemAccessList_AddOverloadDefaultMetadata __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOverloadDefaultMetadata
#define IStorageItemAccessList_Add __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Add
#define IStorageItemAccessList_AddOrReplaceOverloadDefaultMetadata __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOrReplaceOverloadDefaultMetadata
#define IStorageItemAccessList_AddOrReplace __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_AddOrReplace
#define IStorageItemAccessList_GetItemAsync __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetItemAsync
#define IStorageItemAccessList_GetFileAsync __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFileAsync
#define IStorageItemAccessList_GetFolderAsync __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFolderAsync
#define IStorageItemAccessList_GetItemWithOptionsAsync __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetItemWithOptionsAsync
#define IStorageItemAccessList_GetFileWithOptionsAsync __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFileWithOptionsAsync
#define IStorageItemAccessList_GetFolderWithOptionsAsync __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_GetFolderWithOptionsAsync
#define IStorageItemAccessList_Remove __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Remove
#define IStorageItemAccessList_ContainsItem __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_ContainsItem
#define IStorageItemAccessList_Clear __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_Clear
#define IStorageItemAccessList_CheckAccess __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_CheckAccess
#define IStorageItemAccessList_get_Entries __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_get_Entries
#define IStorageItemAccessList_get_MaximumItemsAllowed __x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_get_MaximumItemsAllowed
#endif /* WIDL_USING__WINDOWS_STORAGE_ACCESSCACHE_ISTORAGEITEMACCESSLIST */
#endif

#endif

#endif  /* ____x_ABI_CWindows_CStorage_CAccessCache_CIStorageItemAccessList_INTERFACE_DEFINED__ */

/*
 * Class Windows.Storage.AccessCache.StorageApplicationPermissions
 *
 * Class implements the following interfaces:
 *    Windows.Storage.AccessCache.IStorageApplicationPermissionsStatics ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Windows_Storage_AccessCache_StorageApplicationPermissions_DEFINED
#define RUNTIMECLASS_Windows_Storage_AccessCache_StorageApplicationPermissions_DEFINED
extern const DECLSPEC_SELECTANY WCHAR RuntimeClass_Windows_Storage_AccessCache_StorageApplicationPermissions[] = {'W','i','n','d','o','w','s','.','S','t','o','r','a','g','e','.','A','c','c','e','s','s','C','a','c','h','e','.','S','t','o','r','a','g','e','A','p','p','l','i','c','a','t','i','o','n','P','e','r','m','i','s','s','i','o','n','s',0};
#endif /* RUNTIMECLASS_Windows_Storage_AccessCache_StorageApplicationPermissions_DEFINED */

/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER HSTRING_UserSize     (ULONG *, ULONG, HSTRING *);
unsigned char * __RPC_USER HSTRING_UserMarshal  (ULONG *, unsigned char *, HSTRING *);
unsigned char * __RPC_USER HSTRING_UserUnmarshal(ULONG *, unsigned char *, HSTRING *);
void            __RPC_USER HSTRING_UserFree     (ULONG *, HSTRING *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __windows_storage_accesscache_h__ */
